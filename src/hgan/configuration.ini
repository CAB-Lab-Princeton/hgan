[video]

# How many frames do we generate for each of the fake videos?
# Also, how many frames do we inspect for each of the real input videos?
# Should be divisible by 16 since
#   Discriminator_V is doing nn.Linear(int((ndf*8)*(T/16)*6*6), 1)
frames = 16

# Convert to values between -1 and +1 ?
normalize = False

[paths]
# base wrt which all input/output folders are determined
# include trailing slash
input =
output =

[experiment]
# One of two_body_colors_fixed/double_pendulum_colors_fixed/three_body_colors_fixed/mass_spring_colors_fixed/
#        pendulum_colors/two_body_colors/double_pendulum_colors/mass_spring_colors/avi/pre-train
dataset = pendulum_colors

# One of
#   gru/hnn_simple
#   hnn_phase_space
#   hnn_mass
architecture = hnn_phase_space

n_epoch = 120_000
batch_size = 16
cyclic_coord_loss = 0.01
learning_rate = 0.0002
betas = 0.5, 0.999

# we print diagnostics after every print_every epochs
print_every = 1
# we save trained models every save_model_every epochs
save_model_every = 10
# we save fake videos every save_video_every epochs
save_video_every = 10

seed = 0
retrain = True

# Specify wandb API Key (from https://wandb.ai/authorize) if using wandb, otherwise leave blank
wandb_api_key =

# Whether to use the real-time Hamiltonian Physics data generator or not
hamiltonian_physics_rt = True

[arch]
img_size = 96
hidden_size = 100
# Dimension of epsilon (p, q) vector
de = 20
# Dimension of content vector for discriminator
dc = 50
# Dimensions of label vector for discriminator (appended to the end of de)
# Set 0 for no label information
# 15 for mass_spring (11 systems + 4 physical props)
dl = 15
# Number of channels
nc = 3
# Number of Discriminator filters (from dcgan)
ndf = 32
# Number of Generator filters
ngf = 32

[test]
# A section purely for testing purposes

astring = bar
abool = False
aint = 42
amissing =
